INFO  12:38:26,693 - Compiling source file: C:\projekat\workspace\MJCompiler\test\program.mj
INFO  12:38:26,729 - #2 program
INFO  12:38:26,729 - #45 MJProgram
INFO  12:38:26,729 - #45 int
INFO  12:38:26,730 - #45 x
INFO  12:38:26,730 - #11 [
INFO  12:38:26,730 - #12 ]
INFO  12:38:26,730 - #9 ,
INFO  12:38:26,731 - #45 y
INFO  12:38:26,731 - #8 ;
INFO  12:38:26,731 - #6 const
INFO  12:38:26,731 - #45 char
INFO  12:38:26,731 - #45 c
INFO  12:38:26,731 - #7 =
INFO  12:38:26,732 - #48 c
INFO  12:38:26,732 - #8 ;
INFO  12:38:26,732 - #3 {
INFO  12:38:26,732 - #45 int
INFO  12:38:26,732 - #45 k
INFO  12:38:26,732 - #13 (
INFO  12:38:26,733 - #45 int
INFO  12:38:26,733 - #45 i
INFO  12:38:26,733 - #9 ,
INFO  12:38:26,734 - #45 char
INFO  12:38:26,734 - #45 j
INFO  12:38:26,734 - #14 )
INFO  12:38:26,734 - #45 int
INFO  12:38:26,735 - #45 c
INFO  12:38:26,735 - #8 ;
INFO  12:38:26,735 - #3 {
INFO  12:38:26,735 - #45 c
INFO  12:38:26,735 - #7 =
INFO  12:38:26,735 - #46 2
INFO  12:38:26,736 - #8 ;
INFO  12:38:26,740 - #45 c
INFO  12:38:26,740 - #22 ++
INFO  12:38:26,740 - #8 ;
INFO  12:38:26,740 - #45 c
INFO  12:38:26,740 - #23 --
INFO  12:38:26,740 - #8 ;
INFO  12:38:26,740 - #18 return
INFO  12:38:26,740 - #45 c
INFO  12:38:26,741 - #27 +
INFO  12:38:26,741 - #46 2
INFO  12:38:26,741 - #8 ;
INFO  12:38:26,742 - #4 }
INFO  12:38:26,742 - #15 void
INFO  12:38:26,742 - #45 main
INFO  12:38:26,742 - #13 (
INFO  12:38:26,742 - #14 )
INFO  12:38:26,742 - #3 {
INFO  12:38:26,742 - #20 print
INFO  12:38:26,743 - #13 (
INFO  12:38:26,743 - #46 1
INFO  12:38:26,743 - #14 )
INFO  12:38:26,743 - #8 ;
INFO  12:38:26,743 - #45 x
INFO  12:38:26,743 - #11 [
INFO  12:38:26,743 - #46 1
INFO  12:38:26,743 - #12 ]
INFO  12:38:26,743 - #7 =
INFO  12:38:26,743 - #45 y
INFO  12:38:26,743 - #27 +
INFO  12:38:26,743 - #46 5
INFO  12:38:26,743 - #27 +
INFO  12:38:26,743 - #46 3
INFO  12:38:26,743 - #8 ;
INFO  12:38:26,744 - #19 read
INFO  12:38:26,744 - #13 (
INFO  12:38:26,744 - #45 x
INFO  12:38:26,744 - #11 [
INFO  12:38:26,744 - #46 1
INFO  12:38:26,744 - #12 ]
INFO  12:38:26,744 - #14 )
INFO  12:38:26,744 - #8 ;
INFO  12:38:26,744 - #20 print
INFO  12:38:26,744 - #13 (
INFO  12:38:26,744 - #46 2
INFO  12:38:26,744 - #14 )
INFO  12:38:26,744 - #8 ;
INFO  12:38:26,744 - #16 if
INFO  12:38:26,745 - #13 (
INFO  12:38:26,745 - #45 x
INFO  12:38:26,745 - #34 ==
INFO  12:38:26,745 - #45 x
INFO  12:38:26,745 - #32 ||
INFO  12:38:26,746 - #45 y
INFO  12:38:26,746 - #36 >
INFO  12:38:26,746 - #46 1
INFO  12:38:26,747 - #33 &&
INFO  12:38:26,747 - #45 y
INFO  12:38:26,747 - #38 <
INFO  12:38:26,747 - #46 5
INFO  12:38:26,747 - #14 )
INFO  12:38:26,747 - #45 y
INFO  12:38:26,748 - #22 ++
INFO  12:38:26,748 - #8 ;
INFO  12:38:26,748 - #45 k
INFO  12:38:26,748 - #13 (
INFO  12:38:26,748 - #45 k
INFO  12:38:26,748 - #13 (
INFO  12:38:26,748 - #45 x
INFO  12:38:26,748 - #11 [
INFO  12:38:26,749 - #46 1
INFO  12:38:26,749 - #12 ]
INFO  12:38:26,749 - #9 ,
INFO  12:38:26,749 - #45 c
INFO  12:38:26,749 - #14 )
INFO  12:38:26,750 - #9 ,
INFO  12:38:26,750 - #45 c
INFO  12:38:26,750 - #14 )
INFO  12:38:26,750 - #8 ;
INFO  12:38:26,750 - #21 for
INFO  12:38:26,750 - #13 (
INFO  12:38:26,751 - #45 int
INFO  12:38:26,751 - #45 i
ERROR 12:38:26,751 - 
Sintaksna greska na liniji 20
INFO  12:38:26,751 - #7 =
INFO  12:38:26,751 - #46 0
INFO  12:38:26,751 - #8 ;
INFO  12:38:26,752 - #45 i
INFO  12:38:26,752 - #38 <
INFO  12:38:26,752 - #46 10
INFO  12:38:26,752 - #8 ;
INFO  12:38:26,752 - #45 i
INFO  12:38:26,752 - #22 ++
INFO  12:38:26,752 - #14 )
ERROR 12:38:26,752 - Izvrsen oporavak do ; u liniji 20
ERROR 12:38:26,753 - 
Sintaksna greska na liniji 20
INFO  12:38:26,753 - #3 {
INFO  12:38:26,753 - #17 break
INFO  12:38:26,753 - #8 ;
INFO  12:38:26,753 - #4 }
INFO  12:38:26,753 - #4 }
INFO  12:38:26,753 - #4 }
ERROR 12:38:26,753 - Izvrsen oporavak do ; u liniji 20
ERROR 12:38:26,753 - 
Sintaksna greska na liniji 25
ERROR 12:38:26,753 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 25
